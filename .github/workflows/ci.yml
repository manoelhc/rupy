name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  rust-build-and-test:
    name: Rust Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Check Rust formatting
      run: cargo fmt -- --check
    
    - name: Run Clippy
      run: cargo clippy -- -D warnings -A clippy::useless-conversion
    
    - name: Build Rust project
      run: cargo build --release
    
    - name: Run Rust tests
      run: cargo test --release

  python-build-and-test:
    name: Python Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
    
    - name: Cache Cargo dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-
    
    - name: Install maturin
      run: pip install maturin
    
    - name: Build Python package
      run: maturin build --release
    
    - name: Install built wheel
      run: |
        pip install target/wheels/rupy-*.whl
      shell: bash
    
    - name: Test Python import
      run: python -c "from rupy import Rupy; print('Successfully imported Rupy')"
    
    - name: Run Python tests (if they exist)
      run: |
        if [ -d "tests" ]; then
          pip install pytest
          pytest tests/
        else
          echo "No Python tests found, skipping"
        fi
      shell: bash
      continue-on-error: true

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Check Rust code formatting
      run: cargo fmt -- --check
    
    - name: Run Clippy linter
      run: cargo clippy --all-targets --all-features -- -D warnings -A clippy::useless-conversion
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    
    - name: Install Python linting tools
      run: |
        pip install ruff black mypy
    
    - name: Check Python code formatting with black
      run: |
        if [ -d "python" ]; then
          black --check python/
        fi
      continue-on-error: true
    
    - name: Lint Python code with ruff
      run: |
        if [ -d "python" ]; then
          ruff check python/
        fi
      continue-on-error: true
